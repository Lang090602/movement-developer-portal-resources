#+TITLE: Basic Collection Resource

* Table of Content :TOC:
- [[#hello-world-contract][Hello world Contract]]
- [[#data-types][Data Types]]

* Hello world Contract
#+begin_src move :mkdirp yes :tangle ~/.config/skhd/skhdrc :export code :results silent :lexical t
module movement::hello_world {
    use std::string::{String, utf8};
    use std::debug::print;

    struct MoveResource has key {
        string: String
    }

    fun init_module(caller: &signer) {
        let greeting: String = utf8(b"Hello World!!!");
        print(&greeting);
        move_to(caller, MoveResource {
            string: greeting
        });
    }

    #[test(caller = @0x1)]
    fun test_init_module(caller: &signer) {
        init_module(caller);
    }
}
#+end_src

- Running test on terminal:
#+begin_src sh
aptos move test -f hello_world
#+end_src

#+begin_src sh
Running Move unit tests
[debug] "Hello World!!!"
[ PASS    ] 0x1::hello_world::test_init_module
Test result: OK. Total tests: 1; passed: 1; failed: 0
{
  "Result": "Success"
}
#+end_src

* Data Types
This part provides a comprehensive overview of fundamental data types in the Move programming language. It covers =integers=, =booleans=, =addresses=, =signers=, =strings=, =vectors=, and =simple maps=. For each type, the document explains their characteristics, usage, and provides code examples with explanations. The content includes detailed summaries, syntax explanations, and practical demonstrations of how to work with these data types in Move. Additionally, it offers insights into type-specific operations, potential pitfalls, and best practices for efficient programming in Move.

#+begin_quote
[[./data_type/README.org][See Here]]
#+end_quote
